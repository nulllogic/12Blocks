// ↓ Config
// Override default config | @example
@use "config" as config with (
  $custom : (
    prefix : 'xii',
  )
);

// ↓ Theme
/* Override default settings in the theme | @example */
@use "themes/default" as theme with (
  $custom : (
    html: (
      body : (
        light : (
          background : #fff
        ),
        dark : (
          background : #ccc
        )
      )
    )
  )
);

// ↓ Root
@use 'root' with (
  $config : config.$updated,
  $theme: theme.$updated
);

// Great reset
@use 'reset' with (
  $config : config.$updated,
  $theme: theme.$updated
);

// Boot
// Special utility to dynamically create css properties for html tags, specified in theme
@use 'boot' with (
  $config : config.$updated,
  $theme: theme.$updated
);

// Amazing content
// Special class `.content` to allow formatting of the default html tags
@use 'content' with (
  $config : config.$updated,
  $theme: theme.$updated
);

// ↓ Container
@use 'components/container' with (
  $config : config.$updated,
  $theme: theme.$updated
);

// ↓ Grid
//@use 'components/grid' with (
//  $config : config.$updated,
//);

// ↓ Card
@use 'components/card' with (
  $config : config.$updated,
  $theme: theme.$updated
);

// ↓ Badge
@use 'components/badge' with (
  $config : config.$updated,
  $theme: theme.$updated
);

// ↓ Form
@use 'components/form' with (
  $config : config.$updated,
  $theme: theme.$updated
);

// ↓ Buttons
@use 'components/button' with (
  $config : config.$updated,
  $theme: theme.$updated
);
@use 'components/button-group' with (
  $config : config.$updated,
  $theme: theme.$updated
);


////@use "components/icon";
//@use "components/button";
////@use "components/button-group";

// ↓ Breadcrumbs
@use 'components/breadcrumb' with (
  $config : config.$updated,
  $theme: theme.$updated
);

@use 'components/alert' with (
  $config : config.$updated,
  $theme: theme.$updated
);

@use 'components/accordion' with (
  $config : config.$updated,
  $theme: theme.$updated
);


// ↓ Table
//@use 'components/table' with (
//  $config : config.$updated,
//  $theme: theme.$updated
//);

// ↓ Overlay
@use 'components/overlay' with (
  $config : config.$updated,
  $theme: theme.$updated
);

// ↓ Pagination
@use 'components/pagination' with (
  $config : config.$updated,
  $theme: theme.$updated
);

// ↓ Placeholder
@use 'components/placeholder' with (
  $config : config.$updated,
  $theme: theme.$updated
);

// ↓ Modal
@use "components/modal" with (
  $config : config.$updated,
  $theme: theme.$updated
);

// ↓ Loader
@use "components/loader" with (
  $config : config.$updated,
  $theme: theme.$updated
);

// ↓ Nav
@use "components/nav" with (
  $config : config.$updated,
  $theme: theme.$updated
);

// ↓ Navigation bar
@use 'components/navbar' with (
  $config : config.$updated,
  $theme: theme.$updated
);

// ↓ Helpers
@use "helpers/clearfix";
@use "helpers/screen_reader";
@use "helpers/text_truncate";

// ↓ Utilities
@use "utilities/api" with (
  $config : config.$updated,
  $theme : theme.$updated
);

// @TODO 
// 1. navbar
// 2. shadows rules
// 3. pagination
// 4. buttons
// 5. logo
// 6. gaps ( add css variable for the future use)
// 7. publish to github-pages
// 8. add hover state mixin generator
// 9. add light theme styling 
// 10. add transitions to the buttons
// 11. add spacing class to button group
