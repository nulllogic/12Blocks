@use '../config';
@use './breakpoints' as mixins;

// Grid system
@mixin prepare_rows() {
  display: flex;
  flex-wrap: wrap;
}

@mixin prepare_columns() {
  width: 100%;
  max-width: 100%;
  flex-shrink: 0;
}

@mixin prepare_auto_columns() {
  flex: 0 0 auto;
  width: auto;
}

// Row columns

@function divide($dividend, $divisor, $precision: 10) {
  $sign: if($dividend > 0 and $divisor > 0 or $dividend < 0 and $divisor < 0, 1, -1);
  $dividend: abs($dividend);
  $divisor: abs($divisor);

  @if $dividend == 0 {
    @return 0;
  }
  @if $divisor == 0 {
    @error "Cannot divide by 0";
  }
  $remainder: $dividend;
  $result: 0;
  $factor: 10;

  @while ($remainder > 0 and $precision >= 0) {
    $quotient: 0;
    @while ($remainder >= $divisor) {
      $remainder: $remainder - $divisor;
      $quotient: $quotient + 1;
    }
    $result: $result * 10 + $quotient;
    $factor: $factor * .1;
    $remainder: $remainder * 10;
    $precision: $precision - 1;
    @if ($precision < 0 and $remainder >= $divisor * 5) {
      $result: $result + 1;
    }
  }
  $result: $result * $factor * $sign;
  @return $result;
}

@mixin generate_columns($size: false, $columns: config.$grid-columns) {
  @if $size {
    flex: 0 0 auto;
    width: percentage(divide($size, $columns));

  } @else {
    flex: 1 1 0;
    max-width: 100%;
  }
}

// Framework grid generation

@mixin generate_grid_columns($columns: config.$grid-columns, $breakpoints: config.$grid-breakpoints) {

  @each $breakpoint in map-keys($breakpoints) {

    $infix: mixins.breakpoint-infix($breakpoint, $breakpoints);

    @include mixins.media-breakpoint-up($breakpoint, $breakpoints) {

      .col#{$infix} {
        flex: 1 0 0;
      }

      .col#{$infix}-auto {
        @include prepare_auto_columns();
      }

      @if $columns > 0 {
        @for $i from 1 through $columns {
          .col#{$infix}-#{$i} {
            @include generate_columns($i, $columns);
          }
        }

      }

    }
  }
}
