@use "sass:meta";
@use '../../functions' as functions;
@use '../../mixins/generators/color-sheme' as mixin;

@mixin generate-properties($tag, $properties, $config) {
  @each $property, $value in $properties {

    // Variables
    @if (str-index($property, '--') == 1) {
      --#{functions.get-config($config, 'prefix')}-#{functions.str-replace($property, '--', '')} : #{meta.inspect($value)};
    }

    // Colors properties
    @if ($property == 'colors') {

      @each $color, $color-properties in $value {
        @each $scheme in functions.str-split(functions.get-config($config, 'color-scheme'), ' ') {
          @if $scheme == $color {
            @include mixin.generate-color-scheme($color) {
              @each $color-property, $color-value in $color-properties {
                --#{functions.get-config($config, 'prefix')}-#{$tag}-#{$color-property}: #{meta.inspect($color-value)};
              }
            }
          }
        }
      }

    }

    // Pseudo elements properties
    @if ($property == 'pseudo') {

    }

    // All other elements
    @if ($property != 'pseudo' and $property != 'colors' and str-index($property, '--') != 1 and $property != 'dark' and $property != 'light') {
      #{$property} : #{meta.inspect($value)};
    }

  }
}
