@use 'sass:map';

@function str-split($string, $separator) {
  $split-arr: ();
  $index : str-index($string, $separator);
  @while $index != null {
    $item: str-slice($string, 1, $index - 1);
    $split-arr: append($split-arr, $item);
    $string: str-slice($string, $index + 1);
    $index : str-index($string, $separator);
  }
  $split-arr: append($split-arr, $string);

  @return $split-arr;
}

@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

@function get-config($config, $value) {
  $val: null;

  @if($config == nil) {
    @warn 'Config variable is nil';
    @return nil;
  }

  @if (str-index($value, '.')) {
    $path: str-split($value, '.');
    $val: map.get($config, $path...);
  } @else {
    $val: map.get($config, $value);
  }

  @if ($val != null) {
    @return $val;
  } @else {
    @return nil;
  }
}

@function get-theme($theme, $value) {
  $val: null;

  @if($theme == nil) {
    @warn 'Theme variable is nil';
    @return nil;
  }

  @if (str-index($value, '.')) {
    $path: str-split($value, '.');
    $val: map.get($theme, $path...);
  } @else {
    $val: map.get($theme, $value);
  }

  @if ($val != null) {
    @return $val;
  } @else {
    @return nil;
  }

}

// See https://codepen.io/kevinweber/pen/dXWoRw
//
// Requires the use of quotes around data URIs.
@function escape-svg($string) {
  @if str-index($string, "data:image/svg+xml") {
    @each $char, $encoded in $escaped-characters {
      // Do not escape the url brackets
      @if str-index($string, "url(") == 1 {
        $string: url("#{str-replace(str-slice($string, 6, -3), $char, $encoded)}");
      } @else {
        $string: str-replace($string, $char, $encoded);
      }
    }
  }

  @return $string;
}
