/*
┬─┐┌─┐┌─┐┌─┐┌┬┐
├┬┘├┤ └─┐├┤  │
┴└─└─┘└─┘└─┘ ┴
*/

@use 'sass:map';
@use "sass:meta";
@use 'functions' as functions;
@use 'mixins' as mixins;

$config: nil !default;
$theme: nil !default;

$prefix: functions.get-config($config, 'prefix');

$is-reset-enabled: functions.get-config($config, 'enable.reset');
$is-button-pointers-enabled: functions.get-config($config, 'enable.button-pointers');
$is-spacing-enabled: functions.get-config($config, 'enable.spacing');

$color-scheme: functions.get-config($config, 'color-scheme');

*,
*::before,
*::after {
  box-sizing: border-box;
}

@if $is-reset-enabled {

  // Body
  // 1. Remove the margin in all browsers.
  // 2. As a best practice, apply a default `background-color`.
  // 3. Prevent adjustments of font size after orientation changes in iOS.
  // 4. Change the default tap highlight to be completely transparent in iOS.
  // scss-docs-start reboot-body-rules
  body {

    margin: 0; // 1
    -webkit-text-size-adjust: 100%; // 3
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0); // 4

    @include mixins.generate-properties('body', functions.get-theme($theme, 'html.body'), $config)
  }
  // scss-docs-end reboot-body-rules


  // Content grouping
  // 1. Color property reset Firefox's gray color
  hr {
    @include mixins.generate-properties('hr', functions.get-theme($theme, 'html.hr'), $config);
  }

  // Typography
  // 1. Remove top margins from headings
  //    By default, `<h1>`-`<h6>` all receive top and bottom margins. We nuke the top
  //    margin for easier control within type scales as it avoids margin collapsing.

  h1 {
    @include mixins.generate-properties('h1', functions.get-theme($theme, 'html.h1'), $config);
  }

  h2 {
    @include mixins.generate-properties('h2', functions.get-theme($theme, 'html.h2'), $config);
  }

  h3 {
    @include mixins.generate-properties('h3', functions.get-theme($theme, 'html.h3'), $config);
  }

  h4 {
    @include mixins.generate-properties('h4', functions.get-theme($theme, 'html.h4'), $config);
  }

  h5 {
    @include mixins.generate-properties('h5', functions.get-theme($theme, 'html.h5'), $config);
  }

  h6 {
    @include mixins.generate-properties('h6', functions.get-theme($theme, 'html.h6'), $config);
  }


  // Reset margins on paragraphs
  // Similarly, the top margin on `<p>`s get reset. However, we also reset the
  // bottom margin to use `rem` units instead of `em`.

  p {
    @include mixins.generate-properties('p', functions.get-theme($theme, 'html.p'), $config);
  }

  // Abbreviations
  // 1. "text-decoration" correct text decoration in Chrome, Edge, Opera, and Safari.
  // 2. "cursor" explicit cursor to indicate changed behavior.
  // 3. "text-decoration-skip-ink" prevent the text-decoration to be skipped.
  abbr[title] {
    @include mixins.generate-properties('abbr', functions.get-theme($theme, 'html.abbr.attributes.title'), $config);
  }
  //
  //
  // Address
  address {
    @include mixins.generate-properties('address', functions.get-theme($theme, 'html.address'), $config);
  }


  // Lists
  ol {
    @include mixins.generate-properties('ol', functions.get-theme($theme, 'html.ol'), $config);
  }

  ul {
    @include mixins.generate-properties('ul', functions.get-theme($theme, 'html.ul'), $config);
  }

  ol,
  ul,
  dl {
    margin: 0
  }

  ol ol,
  ul ul,
  ol ul,
  ul ol {
    margin: 0
  }

  dt {
    @include mixins.generate-properties('dt', functions.get-theme($theme, 'html.dt'), $config);
  }

  // 1. Undo browser default
  dd {
    margin-bottom: .5rem;
    margin-left: 0; // 1
  }


  // Blockquote
  blockquote {
    @include mixins.generate-properties('blockqoute', functions.get-theme($theme, 'html.blockquote'), $config);
  }


  // Strong
  // Add the correct font weight in Chrome, Edge, and Safari
  b,
  strong {
    font-weight: bold;
  }

  // Small
  // Add the correct font size in all browsers
  small {
    @include mixins.generate-properties('small', functions.get-theme($theme, 'html.small'), $config);
  }


  // Mark
  mark {
    @include mixins.generate-properties('mark', functions.get-theme($theme, 'html.mark'), $config);
  }


  // Sub and Sup
  // Prevent `sub` and `sup` elements from affecting the line height in
  // all browsers.
  sub,
  sup {
    position: relative;
    line-height: 0;
    vertical-align: baseline;
  }

  sub {
    @include mixins.generate-properties('sub', functions.get-theme($theme, 'html.sub'), $config);
  }
  sup {
    @include mixins.generate-properties('sup', functions.get-theme($theme, 'html.sup'), $config);
  }

  // And undo these styles for placeholder links/named anchors (without href).
  // It would be more straightforward to just use a[href] in previous block, but that
  // causes specificity issues in many other styles that are too complex to fix.
  a:not([href]):not([class]) {
    &,
    &:hover {
      color: inherit;
      text-decoration: none;
    }
  }


  // Code
  pre,
  code,
  kbd,
  samp {
    font-size: 1em; // Correct the odd `em` font sizing in all browsers.
  }

  // 1. "margin" remove browser default top margin
  // 2. "overflow" don't allow content to break outside

  pre {
    @include mixins.generate-properties('pre', functions.get-theme($theme, 'html.pre'), $config);
    // Account for some code outputs that place code tags in pre tags
    code {
      font-size: inherit;
      color: inherit;
      word-break: normal;
    }
  }

  code {
    @include mixins.generate-properties('code', functions.get-theme($theme, 'html.code'), $config);
    //color: var(--#{$prefix}code-color);
    // Streamline the style when inside anchors to avoid broken underline and more
    a > & {
      color: inherit;
    }
  }

  kbd {
    @include mixins.generate-properties('kbd', functions.get-theme($theme, 'html.code'), $config);

    kbd {
      padding: 0;
      font-size: inherit;
    }
  }


  // Figures
  // Apply a consistent margin strategy (matches our type styles).
  figure {
    @include mixins.generate-properties('figure', functions.get-theme($theme, 'html.figure'), $config);
  }


  // Images and content
  img,
  svg {
    vertical-align: middle;
  }


  // Tables
  // Prevent double borders
  table {
    @include mixins.generate-properties('table', functions.get-theme($theme, 'html.table'), $config);
  }

  caption {
    @include mixins.generate-properties('caption', functions.get-theme($theme, 'html.caption'), $config);
  }

  // 1. "font-weight" removes font-weight bold by inheriting
  // 2. "text-align" matches default `<td>` alignment by inheriting `text-align`.
  // 3. "text-align" fix alignment for Safari
  th {
    text-align: -webkit-match-parent;
    @media not -webkit-device-pixel-ratio {
      @include mixins.generate-properties('th', functions.get-theme($theme, 'html.th'), $config);
    }
  }

  thead,
  tbody,
  tfoot,
  tr,
  td,
  th {
    border-color: inherit;
    border-style: solid;
    border-width: 0;
  }


  // Forms
  // 1. "display" allow labels to use `margin` for spacing.
  label {
    @include mixins.generate-properties('label', functions.get-theme($theme, 'html.form.label'), $config);
  }

  // Remove the default `border-radius` that macOS Chrome adds.
  button {
    @include mixins.generate-properties('button', functions.get-theme($theme, 'html.button'), $config);
  }

  // Explicitly remove focus outline in Chromium when it shouldn't be
  // visible (e.g. as result of mouse click or touch tap). It already
  // should be doing this automatically, but seems to currently be
  // confused and applies its very visible two-tone outline anyway.
  button:focus:not(:focus-visible) {
    outline: 0;
  }

  // 1. "margin" remove the margin in Firefox and Safari
  input,
  button,
  select,
  optgroup,
  textarea {
    margin: 0;
    line-height: inherit;
  }

  // Remove the inheritance of text transform in Firefox
  button,
  select {
    text-transform: none;
  }
  // Set the cursor for non-`<button>` buttons
  [role="button"] {
    cursor: pointer;
  }

  select {
    // Remove the inheritance of word-wrap in Safari.
    @include mixins.generate-properties('select', functions.get-theme($theme, 'html.form.select'), $config);

    // Undo the opacity change from Chrome
    &:disabled {
      opacity: 1;
    }
  }

  // Remove the dropdown arrow only from text type inputs built with datalists in Chrome.
  // See https://stackoverflow.com/a/54997118
  [list]:not([type="date"]):not([type="datetime-local"]):not([type="month"]):not([type="week"]):not([type="time"])::-webkit-calendar-picker-indicator {
    display: none !important;
  }

  // 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
  //    controls in Android 4.
  // 2. Correct the inability to style clickable types in iOS and Safari.
  // 3. Opinionated: add "hand" cursor to non-disabled button elements.

  button,
  [type="button"], // 1
  [type="reset"],
  [type="submit"] {
    -webkit-appearance: button; // 2

    @if $is-button-pointers-enabled {
      &:not(:disabled) {
        cursor: pointer; // 3
      }
    }
  }

  // Remove inner border and padding from Firefox, but don't restore the outline like Normalize.
  ::-moz-focus-inner {
    padding: 0;
    border-style: none;
  }

  // 1. "resize" textareas should really only resize vertically so they don't break their (horizontal) containers.
  textarea {
    @include mixins.generate-properties('textarea', functions.get-theme($theme, 'html.form.textarea'), $config);
  }

  // 1. "min-width" browsers set a default `min-width: min-content;` on fieldsets,
  //    unlike e.g. `<div>`s, which have `min-width: 0;` by default.
  //    So we reset that to ensure fieldsets behave more like a standard block element.
  //    See https://html.spec.whatwg.org/multipage/#the-fieldset-and-legend-elements
  // 2. "border" reset the default outline behavior of fieldsets so they don't affect page layout.

  fieldset {
    @include mixins.generate-properties('fieldset', functions.get-theme($theme, 'html.form.fieldset'), $config);
  }

  // 1. By using `float: left`, the legend will behave like a block element.
  //    This way the border of a fieldset wraps around the legend if present.
  // 2. "clear" fix wrapping bug.
  legend {
    @include mixins.generate-properties('legend', functions.get-theme($theme, 'html.form.legend'), $config);

    + * {
      clear: left; // 2
    }
  }

  // Fix height of inputs with a type of datetime-local, date, month, week, or time
  ::-webkit-datetime-edit-fields-wrapper,
  ::-webkit-datetime-edit-text,
  ::-webkit-datetime-edit-minute,
  ::-webkit-datetime-edit-hour-field,
  ::-webkit-datetime-edit-day-field,
  ::-webkit-datetime-edit-month-field,
  ::-webkit-datetime-edit-year-field {
    padding: 0;
  }

  ::-webkit-inner-spin-button {
    height: auto;
  }

  // 1. Correct the outline style in Safari.
  // 2. This overrides the extra rounded corners on search inputs in iOS
  [type="search"] {
    outline-offset: -2px; // 1
    -webkit-appearance: textfield; // 2
  }

  // 1. A few input types should stay LTR
  // See https://rtlstyling.com/posts/rtl-styling#form-inputs
  // 2. RTL only output
  // See https://rtlcss.com/learn/usage-guide/control-directives/#raw

  /* rtl:raw:
  [type="tel"],
  [type="url"],
  [type="email"],
  [type="number"] {
    direction: ltr;
  }
  */

  // Remove the inner padding in Chrome and Safari on macOS.
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  // Remove padding around color pickers in webkit browsers
  ::-webkit-color-swatch-wrapper {
    padding: 0;
  }


  // 1. Inherit font family and line height for file input buttons
  // 2. Correct the inability to style clickable types in iOS and Safari.
  ::file-selector-button {
    font: inherit; // 1
    -webkit-appearance: button; // 2
  }

  // Correct element displays
  output {
    display: inline-block;
  }

  // Remove border from iframe
  iframe {
    @include mixins.generate-properties('iframe', functions.get-theme($theme, 'html.iframe'), $config);
  }

  // Summary
  // 1. "display" add the correct display in all browsers
  summary {
    @include mixins.generate-properties('summary', functions.get-theme($theme, 'html.summary'), $config);
  }


  // Progress
  progress {
    @include mixins.generate-properties('progress', functions.get-theme($theme, 'html.progress'), $config);
  }


  // Hidden attribute
  [hidden] {
    display: none !important;
  }
}
