/**
┌┐┌┌─┐┬  ┬
│││├─┤└┐┌┘
┘└┘┴ ┴ └┘ 
**/

/* Load settings and functions */
@use '../themes/default' as theme;
@use '../functions' as functions;
@use '../mixins' as mixins;

/* SCSS variables definition requirement */
$config: nil !default;
$theme: nil !default;

/* Variables assigment */
$prefix: functions.get-config($config, 'prefix');
$color_scheme: functions.get-config($config, 'color-scheme');

/* Configuration variables assigment */
$is_shadow_enabled: functions.get-config($config, 'shadow');
$is_border_radius_enabled: functions.get-config($config, 'border-radius');

/* Wrapper class variables assigment */
$is_wrapper_enabled: functions.get-config($config, 'enable.wrapper');
$wrapper_class: functions.get-config($config, 'wrapper-class');

/* Loading component settings and styling */
$nav-component: functions.get-theme($theme, 'components.nav');

%nav {

  @include mixins.generate-properties('nav', $nav-component, $config);

  background: var(--#{$prefix}-nav-background);
  color: var(--#{$prefix}-nav-color);
  padding: var(--#{$prefix}-nav-padding);
  border: var(--#{$prefix}-nav-border);
  flex-direction: var(--#{$prefix}-nav-flex-direction);
  align-items: var(--#{$prefix}-nav-align-items);
  gap: var(--#{$prefix}-nav-gap);

  @if($is_border_radius_enabled) {
    @include mixins.border-radius(var(--#{$prefix}-nav-border-radius));
  }

  @if($is_shadow_enabled) {
    @include mixins.box-shadow(var(--#{$prefix}-nav-box-shadow));
  }

  &.tabs {

  }

  &.pills {
    
  }

  &.horizontal {
    flex-direction: row;
  }

  &.vertical {
    flex-direction : column;
  }

  .item {
    .link {
      display: inline-flex;
    }
  }
}

@if $is_wrapper_enabled {
  
  .#{$wrapper_class} .nav {
    @extend %nav;
  }

} @else {
  
  .nav {
    @extend %nav;
  }

}

