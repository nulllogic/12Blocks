/**
┌─┐┬  ┌─┐┬─┐┌┬┐┌─┐
├─┤│  ├┤ ├┬┘ │ └─┐
┴ ┴┴─┘└─┘┴└─ ┴ └─┘
**/

@use '../mixins' as mixins;
@use '../functions' as functions;

@use '../mixins/variants/alert' as variants;

$config: nil !default;
$theme: nil !default;

$prefix: functions.get-config($config, 'prefix');
$color-scheme: functions.get-config($config, 'color-scheme');

$is-shadow-enabled: functions.get-config($config, 'shadow');
$is-border-radius-enabled: functions.get-config($config, 'border-radius');

$alert-component: functions.get-theme($theme, 'components.alert');

.alert {

  position: relative;
  display: flex;

  // scss-docs-start alert-css-vars
  @include mixins.generate-properties('alert', $alert-component, $config);

  @if($is-border-radius-enabled) {
    @include mixins.border-radius(var(--#{$prefix}-alert-border-radius));
  }

  @if($is-shadow-enabled) {
    @include mixins.box-shadow(var(--#{$prefix}-alert-box-shadow));
  }
  // scss-docs-end alert-css-vars

  padding: var(--#{$prefix}-alert-padding);
  outline: 1px solid transparent;

  background: var(--#{$prefix}-alert-background);

  .left {
    padding-right: var(--#{$prefix}-alert-icon-padding);

    .icon {
      height: var(--#{$prefix}-alert-icon-size);
      width: var(--#{$prefix}-alert-icon-size);
      color: var(--#{$prefix}-alert-icon-fill);

      display: block;
      max-height: 100%;
      max-width: 100%;
      margin: auto;

      > svg {
        display: block;
      }
    }
  }

  .content {
    flex: 1 1 auto;

    .title {
      font-weight: 500;
      margin-top: -0.225rem;
    }

    .description {
      word-wrap: break-word;
      word-break: break-word;
      overflow-wrap: break-word;

      font-weight: 300;
      font-size: 0.825rem;

      & + .actions {
        padding-top: .5rem;
      }
    }
  }

  &.dismissible {
    padding-right: calc(var(--#{$prefix}-alert-icon-size) + var(--#{$prefix}-alert-padding-dismissable));

    .right {
      top: var(--#{$prefix}-alert-dismiss-btn-position-top);
      right: var(--#{$prefix}-alert-dismiss-btn-position-right);
      position: absolute;

      .btn-close {
        box-shadow: none;
        border: none;
        color: var(--#{$prefix}-alert-close-button-color);

        &:hover {
          box-shadow: none;
          color: var(--#{$prefix}-alert-close-button-color-hover);
        }
      }
    }
  }

  //@each $color-scheme, $theme-value in theme.$alert-colors {
  //  @include mixins.color-scheme($color-scheme) {
  //    @each $variant, $variant-options in $theme-value {
  //      &.#{$variant} {
  //        @each $state, $value in $variant-options {
  //          @include variants.alert($state, $value);
  //        }
  //      }
  //    }
  //  }
  //}
}
