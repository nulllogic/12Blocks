/*
*
┌┐ ┬ ┬┌┬┐┌┬┐┌─┐┌┐┌┌─┐
├┴┐│ │ │  │ │ ││││└─┐
└─┘└─┘ ┴  ┴ └─┘┘└┘└─┘
*
*/

@use '../config';
@use '../themes/default' as theme;

@use '../mixins' as mixins;
@use '../mixins/variants/button' as variant;

.btn {

  // scss-docs-start btn-css-vars
  --#{config.$prefix}btn-padding: #{config.$btn-padding};
  --#{config.$prefix}btn-spinner-size: 1.25rem;
  // scss-docs-end btn-css-vars

  padding: var(--#{config.$prefix}btn-padding) var(--#{config.$prefix}btn-padding);
  color: var(--#{config.$prefix}btn-color);

  border: #{config.$btn-border-width} solid var(--#{config.$prefix}btn-border-color);

  text-align: center;
  text-decoration: if(config.$link-decoration == none, null, none);

  display: inline-flex;
  align-items: center;
  align-content: center;
  white-space: config.$btn-white-space;
  cursor: if(config.$enable-button-pointers, pointer, null);
  user-select: none;
  background-color: var(--#{config.$prefix}btn-bg);

  @include mixins.border-radius(config.$btn-border-radius);
  @include mixins.box-shadow(config.$btn-box-shadow);
  @include mixins.transition(config.$btn-transition);

  &:hover {
    color: var(--#{config.$prefix}btn-hover-color);
    text-decoration: if(config.$link-hover-decoration == underline, none, null);
    background-color: var(--#{config.$prefix}btn-hover-bg);
    border-color: var(--#{config.$prefix}btn-hover-border-color);
  }

  .btn-check:focus + &,
  &:focus {
    color: var(--#{config.$prefix}btn-hover-color);
    border-color: var(--#{config.$prefix}btn-hover-border-color);
    outline: 0;
    // Avoid using mixin so we can pass custom focus shadow properly
    @if config.$enable-shadows {
      box-shadow: var(--#{config.$prefix}btn-box-shadow), var(--#{config.$prefix}btn-focus-box-shadow);
    } @else {
      box-shadow: var(--#{config.$prefix}btn-focus-box-shadow);
    }
  }

  .btn-check:checked + &,
  .btn-check:active + &,
  &:active,
  &.active,
  &.show {
    color: var(--#{config.$prefix}btn-active-color);
    background-color: var(--#{config.$prefix}btn-active-bg);
    border-color: var(--#{config.$prefix}btn-active-border-color);
    @include mixins.box-shadow(var(--#{config.$prefix}btn-active-shadow));

    &:focus {
      // Avoid using mixin so we can pass custom focus shadow properly
      @if config.$enable-shadows {
        box-shadow: var(--#{config.$prefix}btn-active-shadow), var(--#{config.$prefix}btn-focus-box-shadow);
      } @else {
        box-shadow: var(--#{config.$prefix}btn-focus-box-shadow);
      }
    }
  }

  &:disabled,
  &.disabled,
  fieldset:disabled & {
    color: var(--#{config.$prefix}btn-disabled-color);
    pointer-events: none;
    background-color: var(--#{config.$prefix}btn-disabled-bg);
    border-color: var(--#{config.$prefix}btn-disabled-border-color);
    opacity: var(--#{config.$prefix}btn-disabled-opacity);
    @include mixins.box-shadow(none);
  }

  &.btn-link {
    &:focus {
      box-shadow: var(--#{config.$prefix}btn-focus-box-shadow);
    }
  }
}

// scss-docs-start btn-variant-loops
@each $color-scheme, $theme-value in theme.$button-colors {
  @include mixins.color-scheme($color-scheme) {
    @each $variant, $variant-options in $theme-value {
      .btn-#{$variant} {
        @each $state, $values in $variant-options {
          @include variant.button($state, $values);
        }
      }
    }
  }
}

//@each $color, $value in theme.$button-colors {
//  .btn-outline-#{$color} {
//    @include button-outline-variant($value);
//  }
//}

// scss-docs-end btn-variant-loops

// Make a button look and behave like a link
.btn-link {

  --#{config.$prefix}btn-font-weight: #{config.$btn-font-weight};
  --#{config.$prefix}btn-color: #{config.$btn-link-color};
  --#{config.$prefix}btn-bg: transparent;
  --#{config.$prefix}btn-border-color: transparent;
  --#{config.$prefix}btn-hover-color: #{config.$btn-link-hover-color};
  --#{config.$prefix}btn-hover-border-color: transparent;
  --#{config.$prefix}btn-active-border-color: transparent;
  --#{config.$prefix}btn-disabled-border-color: transparent;
  --#{config.$prefix}btn-focus-shadow-rgb: #{to-rgb(#a7b5c2)};
  --#{config.$prefix}btn-box-shadow: none;

  text-decoration: config.$link-decoration;

  &:hover,
  &:focus {
    text-decoration: config.$link-hover-decoration;
  }

  &:focus {
    color: var(--#{config.$prefix}btn-color);
  }

  &:hover {
    color: var(--#{config.$prefix}btn-hover-color);
  }
}

// Button Sizes
.btn-lg {
  //@include button-size($btn-padding-y-lg, $btn-padding-x-lg, $btn-font-size-lg, $btn-border-radius-lg);
}

.btn-sm {
  //@include button-size($btn-padding-y-sm, $btn-padding-x-sm, $btn-font-size-sm, $btn-border-radius-sm);
}

