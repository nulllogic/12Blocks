/*
*
┌┐ ┬ ┬┌┬┐┌┬┐┌─┐┌┐┌┌─┐
├┴┐│ │ │  │ │ ││││└─┐
└─┘└─┘ ┴  ┴ └─┘┘└┘└─┘
*
*/

.btn {

  // scss-docs-start btn-css-vars
  --#{$prefix}btn-padding-x: #{$btn-padding-x};
  --#{$prefix}btn-padding-y: #{$btn-padding-y};

  --#{$prefix}btn-font-family: #{$btn-font-family};
  --#{$prefix}btn-font-weight: #{$btn-font-weight};
  --#{$prefix}btn-line-height: #{$btn-line-height};
  --#{$prefix}btn-font-size: #{$btn-font-size};

  --#{$prefix}btn-color: #{$btn-text-color};
  --#{$prefix}btn-bg: transparent;

  --#{$prefix}btn-border-width: #{$btn-border-width};
  --#{$prefix}btn-border-color: #{$btn-border-color};
  --#{$prefix}btn-border-radius: #{$btn-border-radius};

  --#{$prefix}btn-box-shadow: #{$btn-box-shadow};
  --#{$prefix}btn-disabled-opacity: #{$btn-disabled-opacity};
  --#{$prefix}btn-focus-box-shadow: 0 0 0 #{$btn-focus-width} rgba(var(--#{$prefix}btn-focus-shadow-rgb), .5);

  --#{$prefix}btn-spinner-size: 1.25rem;
  // scss-docs-end btn-css-vars

  font-size:   var(--#{$prefix}btn-font-size);
  font-family: var(--#{$prefix}btn-font-family);
  font-weight: var(--#{$prefix}btn-font-weight);
  line-height: var(--#{$prefix}btn-line-height);

  padding:     var(--#{$prefix}btn-padding-y) var(--#{$prefix}btn-padding-x);
  color:       var(--#{$prefix}btn-color);

  border:      var(--#{$prefix}btn-border-width) solid var(--#{$prefix}btn-border-color);

  text-align: center;
  text-decoration: if($link-decoration == none, null, none);

  display: inline-flex;
  align-items: center;
  align-content: center;
  white-space: $btn-white-space;
  cursor: if($enable-button-pointers, pointer, null);
  user-select: none;

  @include border-radius(var(--#{$prefix}btn-border-radius));
  @include gradient-bg(var(--#{$prefix}btn-bg));
  @include box-shadow(var(--#{$prefix}btn-box-shadow));
  @include transition($btn-transition);

  &:hover {
    color: var(--#{$prefix}btn-hover-color);
    text-decoration: if($link-hover-decoration == underline, none, null);
    background-color: var(--#{$prefix}btn-hover-bg);
    border-color: var(--#{$prefix}btn-hover-border-color);
  }

  .btn-check:focus + &,
  &:focus {
    color: var(--#{$prefix}btn-hover-color);
    @include gradient-bg(var(--#{$prefix}btn-hover-bg));
    border-color: var(--#{$prefix}btn-hover-border-color);
    outline: 0;
    // Avoid using mixin so we can pass custom focus shadow properly
    @if $enable-shadows {
      box-shadow: var(--#{$prefix}btn-box-shadow), var(--#{$prefix}btn-focus-box-shadow);
    } @else {
      box-shadow: var(--#{$prefix}btn-focus-box-shadow);
    }
  }

  .btn-check:checked + &,
  .btn-check:active + &,
  &:active,
  &.active,
  &.show {
    color: var(--#{$prefix}btn-active-color);
    background-color: var(--#{$prefix}btn-active-bg);
    // Remove CSS gradients if they're enabled
    background-image: if($enable-gradients, none, null);
    border-color: var(--#{$prefix}btn-active-border-color);
    @include box-shadow(var(--#{$prefix}btn-active-shadow));

    &:focus {
      // Avoid using mixin so we can pass custom focus shadow properly
      @if $enable-shadows {
        box-shadow: var(--#{$prefix}btn-active-shadow), var(--#{$prefix}btn-focus-box-shadow);
      } @else {
        box-shadow: var(--#{$prefix}btn-focus-box-shadow);
      }
    }
  }

  &:disabled,
  &.disabled,
  fieldset:disabled & {
    color: var(--#{$prefix}btn-disabled-color);
    pointer-events: none;
    background-color: var(--#{$prefix}btn-disabled-bg);
    background-image: if($enable-gradients, none, null);
    border-color: var(--#{$prefix}btn-disabled-border-color);
    opacity: var(--#{$prefix}btn-disabled-opacity);
    @include box-shadow(none);
  }
}

// scss-docs-start btn-variant-loops
@each $theme-color, $value in $theme-colors {
  .btn-#{$theme-color} {

    $background: $value;
    $border : $value;
    $color: color-contrast($value);

    $hover-background: if($color == $color-contrast-light, shade-color($background, $btn-hover-bg-shade-amount), tint-color($background, $btn-hover-bg-tint-amount));
    $hover-border: if($color == $color-contrast-light, shade-color($border, $btn-hover-border-shade-amount), tint-color($border, $btn-hover-border-tint-amount));
    $hover-color: color-contrast($hover-background);

    $active-background: if($color == $color-contrast-light, shade-color($background,$btn-active-bg-shade-amount), tint-color($background, $btn-active-bg-tint-amount));
    $active-border: if($color == $color-contrast-light, shade-color($border, $btn-active-border-shade-amount), tint-color($border, $btn-active-border-tint-amount));
    $active-color: color-contrast($active-background);

    $disabled-background: $background;
    $disabled-border: $border;
    $disabled-color: color-contrast($disabled-background);

    @if($theme-color == 'default') {

      @include button-variant(
        $background: $value,
        $border: rgba(186, 191, 195, 1),
        $hover-background: rgba(239, 239, 239, 1),
        $hover-border: rgba(186, 191, 195, 1),
        $focus-shadow: #{to-rgb(mix($color, $border, 10%))},
        $active-background: shade-color($value, $btn-active-bg-shade-amount),
        $active-border: shade-color($value, $btn-active-border-shade-amount),
        $disabled-background: $disabled-background,
        $disabled-border: $disabled-border,
        $disabled-color: $disabled-color
      );

    } @else {

      @include button-variant(
        $background: $value,
        $border: $border,
        $color: $color,
        $hover-background: $hover-background,
        $hover-border: $hover-background,
        $hover-color: $hover-color,
        $focus-shadow: #{to-rgb(mix($color, $border, 15%))},
        $active-background: $active-background,
        $active-border: $active-border,
        $active-color: $active-color,
        $disabled-background: $disabled-background,
        $disabled-border: $disabled-border,
        $disabled-color: $disabled-color
      );
    }

  }
}

@each $color, $value in $theme-colors {
  .btn-outline-#{$color} {
    @include button-outline-variant($value);
  }
}
// scss-docs-end btn-variant-loops

// Make a button look and behave like a link
.btn-link {

  --#{$prefix}btn-font-weight: #{$btn-font-weight};
  --#{$prefix}btn-color: #{$btn-link-color};
  --#{$prefix}btn-bg: transparent;
  --#{$prefix}btn-border-color: transparent;
  --#{$prefix}btn-hover-color: #{$btn-link-hover-color};
  --#{$prefix}btn-hover-border-color: transparent;
  --#{$prefix}btn-active-border-color: transparent;
  --#{$prefix}btn-disabled-border-color: transparent;
  --#{$prefix}btn-box-shadow: none;

  text-decoration: $link-decoration;

  &:hover {
    color: $btn-link-hover-color;
    text-decoration: $link-hover-decoration;
  }

  &:focus {
    text-decoration: $link-hover-decoration;
  }

  &:disabled,
  &.disabled {
    //color: $btn-link-disabled-color;
  }

  // No need for an active state here
}

// Button Sizes
.btn-lg {
  @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $btn-font-size-lg, $btn-border-radius-lg);
}

.btn-sm {
  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $btn-font-size-sm, $btn-border-radius-sm);
}

